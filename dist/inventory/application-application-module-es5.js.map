{"version":3,"sources":["webpack:///src/app/api/inventory.service.ts","webpack:///src/app/application/application-routing.module.ts","webpack:///src/app/application/application.component.ts","webpack:///src/app/application/application.component.html","webpack:///src/app/application/application.module.ts","webpack:///src/app/application/footer/footer.component.ts","webpack:///src/app/application/footer/footer.component.html","webpack:///src/app/application/header/header.component.ts","webpack:///src/app/application/header/header.component.html","webpack:///src/app/application/home/home.component.ts","webpack:///src/app/application/home/home.component.html","webpack:///src/app/application/item-list/item-list.component.ts","webpack:///src/app/application/item-list/item-list.component.html"],"names":["InventoryService","http","get","providedIn","routes","path","component","children","redirectTo","pathMatch","ApplicationRoutingModule","forChild","imports","exports","ApplicationComponent","selector","templateUrl","styleUrls","encapsulation","None","ApplicationModule","declarations","FooterComponent","HeaderComponent","userService","authService","router","getCurrentUser","then","user","email","error","doLogout","res","navigate","err","console","log","HomeComponent","ItemListComponent","inventoryitem","items","getInventory","item","selectedItem"],"mappings":"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","file":"application-application-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InventoryService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getInventory(){\n    return this.http.get('http://localhost:8000/api/inventories');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ApplicationComponent } from './application.component';\nimport { ItemListComponent } from './item-list/item-list.component';\nimport { HomeComponent } from './home/home.component';\n\n\nconst routes: Routes = [\n  { path: '', component: ApplicationComponent,\n    children: [\n      { path: '', redirectTo: 'home', pathMatch: 'prefix' },\n      { path: 'listitems', component: ItemListComponent },\n      { path: 'home', component: HomeComponent }\n    ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ApplicationRoutingModule { }\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-application',\n  templateUrl: './application.component.html',\n  styleUrls: ['./application.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ApplicationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApplicationRoutingModule } from './application-routing.module';\nimport { ApplicationComponent } from './application.component';\nimport { ItemListComponent } from './item-list/item-list.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HomeComponent } from './home/home.component';\n\n\n@NgModule({\n  declarations: [\n    ApplicationComponent, \n    ItemListComponent, \n    HeaderComponent, \n    FooterComponent, HomeComponent \n  ],\n  imports: [\n    CommonModule,\n    ApplicationRoutingModule\n  ]\n})\nexport class ApplicationModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<footer id=\"sticky-footer\" class=\"py-4 bg-dark text-white-50 bg-gradient-primary\">\n    <div class=\"container text-center\">\n      <small>© Copyright 2020. All rights reserved.</small>\n    </div>\n</footer>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../core/user.service';\nimport { AuthService } from '../../core/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  user;\n\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.userService.getCurrentUser().then(\n      user => this.user = user.email,\n      error => this.user = error);\n  }\n\n  onLogout(){\n    this.authService.doLogout().then(\n      res => {\n        this.router.navigate(['/apps/home']);\n      },\n      err => {\n        console.log(err);\n      }\n    )\n  }\n\n}\n","<!-- Navigation -->\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark static-top bg-gradient-primary\">\n    <div class=\"container\">\n        <a class=\"navbar-brand\" href=\"#\">Inventory System</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n        <ul class=\"navbar-nav ml-auto\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"/apps/home\">Home</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"/apps/listitems\">Inventories</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" *ngIf=\"user == 'No user logged in'\" routerLink=\"/login\">Login</a>\n                <a class=\"nav-link\" *ngIf=\"user != 'No user logged in'\" (click)=\"onLogout()\">Logout</a>\n              </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header>\n    <div id=\"carouselExampleIndicators\" class=\"carousel slide\" data-ride=\"carousel\">\n      <ol class=\"carousel-indicators\">\n        <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"0\" class=\"active\"></li>\n        <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\"></li>\n        <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\"></li>\n      </ol>\n      <div class=\"carousel-inner\" role=\"listbox\">\n        <!-- Slide One - Set the background image for this slide in the line below -->\n        <div class=\"carousel-item active\" style=\"background-image: url('https://source.unsplash.com/RCAhiGJsUUE/1920x1080')\">\n          <div class=\"carousel-caption d-none d-md-block\">\n            <h3 class=\"display-4\">First Slide</h3>\n            <p class=\"lead\">This is a description for the first slide.</p>\n          </div>\n        </div>\n        <!-- Slide Two - Set the background image for this slide in the line below -->\n        <div class=\"carousel-item\" style=\"background-image: url('https://source.unsplash.com/wfh8dDlNFOk/1920x1080')\">\n          <div class=\"carousel-caption d-none d-md-block\">\n            <h3 class=\"display-4\">Second Slide</h3>\n            <p class=\"lead\">This is a description for the second slide.</p>\n          </div>\n        </div>\n        <!-- Slide Three - Set the background image for this slide in the line below -->\n        <div class=\"carousel-item\" style=\"background-image: url('https://source.unsplash.com/O7fzqFEfLlo/1920x1080')\">\n          <div class=\"carousel-caption d-none d-md-block\">\n            <h3 class=\"display-4\">Third Slide</h3>\n            <p class=\"lead\">This is a description for the third slide.</p>\n          </div>\n        </div>\n      </div>\n      <a class=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\n            <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n            <span class=\"sr-only\">Previous</span>\n          </a>\n      <a class=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\n            <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n            <span class=\"sr-only\">Next</span>\n          </a>\n    </div>\n  </header>\n  \n  <!-- Page Content -->\n  <section class=\"py-5\">\n    <div class=\"container\">\n      <h1 class=\"font-weight-light\">Half Page Image Slider</h1>\n      <p class=\"lead\">The background images for the slider are set directly in the HTML using inline CSS. The images in this snippet are from <a href=\"https://unsplash.com\">Unsplash</a>!</p>\n    </div>\n  </section>","import { Component, OnInit } from '@angular/core';\n\n//import { InventoryService } from '../../core/inventory.service';\nimport { InventoryService } from '../../api/inventory.service';\n\n@Component({\n  selector: 'app-item-list',\n  templateUrl: './item-list.component.html',\n  styleUrls: ['./item-list.component.css']\n})\nexport class ItemListComponent implements OnInit {\n  items;\n  selectedItem;\n\n  constructor( \n    private inventoryitem : InventoryService\n  ) { }\n\n  ngOnInit(): void {\n    this.items = this.inventoryitem.getInventory()//getInventories();\n  }\n\n  selectItem(item){\n    this.selectedItem = item;\n  }\n\n}\n","\n<!-- Page Content -->\n<div class=\"container\">\n    <div class=\"card border-0 shadow my-5\">\n      <div class=\"card-body p-5\">\n        <!-- Page Heading -->\n        <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n            <h1 class=\"h3 mb-0 text-gray-800\">List of Inventory</h1>\n            <form class=\"d-none d-sm-inline-block form-inline ml-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\">\n                <div class=\"input-group\">\n                  <input type=\"text\" class=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\">\n                  <div class=\"input-group-append shadow-sm\">\n                    <button class=\"btn btn-primary\" type=\"button\">\n                      <i class=\"fas fa-search fa-sm\"></i>\n                    </button>\n                  </div>\n                </div>\n              </form>\n        </div>\n        <a class=\"nav-link\" routerLink=\"/login\">login</a>\n        <div class=\"card\">\n            <table class=\"table table-hover\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Item Name</th>\n                  <th>Program</th>\n                  <th>Status</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let item of items | async ;index as itemId\">\n                  <td>\n                      {{ item.item_code }}\n                  </td>\n                  <td>\n                        <a (click)=\"selectItem(item)\"> \n                            {{ item.item_name }}\n                        </a>\n                  </td>\n                  <td>{{ item.owner }}</td>\n                  <td>\n                    <font *ngIf=\"item.status == 'Available'\" color=\"green\">{{ item.status }}</font>\n                    <font *ngIf=\"item.status == 'Not Available'\" color=\"red\">{{ item.status }}</font>\n                  </td>\n                </tr>\n                <tr *ngIf=\"selectedItem\">\n                    <td colspan=5>\n                    <div class=\"card\">\n                        <!-- Portfolio Item Heading -->\n                        <h1 class=\"my-4\">{{selectedItem.name_item}}</h1>\n                \n                        <!-- Portfolio Item Row -->\n                        <div class=\"row\">\n                \n                            <div class=\"col-md-8\">\n                                <img class=\"img-fluid\" src=\"http://placehold.it/750x500\" alt=\"\">\n                            </div>\n                \n                            <div class=\"col-md-4\">\n                                <h3 class=\"my-3\">Status : \n                                    <small>\n                                        <font *ngIf=\"selectedItem.status == 'Available'\" color=\"green\">{{ selectedItem.status }}</font>\n                                        <font *ngIf=\"selectedItem.status == 'Not Available'\" color=\"red\">{{ selectedItem.status }}</font>\n                                    </small>\n                                </h3>\n                                <h4 class=\"my-3\">Program : <small>{{selectedItem.program}}</small></h4>\n                                <h3 class=\"my-3\">Descriptions</h3>\n                                <p><small>(Code: {{selectedItem.code}})</small></p>\n                                <p>{{selectedItem.description}}</p>\n                                <button *ngIf=\"selectedItem.status == 'Available'\">Borrow</button>\n                            </div>\n                        </div>\n                    <!-- /.row -->  \n                    </div>\n                    </td>\n                </tr>\n              </tbody>\n            </table>\n            </div>\n      </div>\n    </div>\n  </div>\n  \n  "]}